{"ast":null,"code":"import logger from 'redux-logger';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\nvar makeConfiguredStore = function makeConfiguredStore(reducer, initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware, logger)));\n};\n\nexport var makeStore = function makeStore(initialState) {\n  var _require = require('redux-persist'),\n      persistStore = _require.persistStore,\n      persistReducer = _require.persistReducer;\n\n  var storage = require('redux-persist/lib/storage')[\"default\"];\n\n  var persistConfig = {\n    key: 'nextjs',\n    whitelist: ['mode'],\n    storage: storage\n  };\n  var persistedReducer = persistReducer(persistConfig, reducer);\n  var store = makeConfiguredStore(persistedReducer, initialState);\n  store.__persistor = persistStore(store); // Nasty hack\n\n  window.store = store;\n  return store;\n};\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/redux/redux.js"],"names":["logger","applyMiddleware","compose","createStore","composeWithDevTools","thunkMiddleware","reducer","thunk","makeConfiguredStore","initialState","makeStore","require","persistStore","persistReducer","storage","persistConfig","key","whitelist","persistedReducer","store","__persistor","window","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,OAAD,EAAUG,YAAV;AAAA,SACxBN,WAAW,CACPG,OADO,EAEPG,YAFO,EAGPL,mBAAmB,CAACH,eAAe,CAACI,eAAD,EAAkBL,MAAlB,CAAhB,CAHZ,CADa;AAAA,CAA5B;;AAOI,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACD,YAAD,EAAkB;AAAA,iBAEAE,OAAO,CAAC,eAAD,CAFP;AAAA,MAEhCC,YAFgC,YAEhCA,YAFgC;AAAA,MAElBC,cAFkB,YAElBA,cAFkB;;AAGvC,MAAMC,OAAO,GAAGH,OAAO,CAAC,2BAAD,CAAP,WAAhB;;AAEA,MAAMI,aAAa,GAAG;AAClBC,IAAAA,GAAG,EAAE,QADa;AAElBC,IAAAA,SAAS,EAAE,CAAC,MAAD,CAFO;AAGlBH,IAAAA,OAAO,EAAPA;AAHkB,GAAtB;AAMA,MAAMI,gBAAgB,GAAGL,cAAc,CAACE,aAAD,EAAgBT,OAAhB,CAAvC;AACA,MAAMa,KAAK,GAAGX,mBAAmB,CAACU,gBAAD,EAAmBT,YAAnB,CAAjC;AAEAU,EAAAA,KAAK,CAACC,WAAN,GAAoBR,YAAY,CAACO,KAAD,CAAhC,CAduC,CAcE;;AACzCE,EAAAA,MAAM,CAACF,KAAP,GAAeA,KAAf;AACA,SAAOA,KAAP;AACP,CAjBU;AAoBX,IAAMG,eAAe,GAAGD,MAAM,CAACE,oCAAP,IAA+CrB,OAAvE;AAEA,IAAMiB,KAAK,GAAGhB,WAAW,CACvBG,OADuB,EAEvBgB,eAAe,CAACrB,eAAe,CAACM,KAAD,CAAhB,CAFQ,CAAzB;AAKA,eAAeY,KAAf","sourcesContent":["import logger from 'redux-logger';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers'\nimport thunk from 'redux-thunk';\n\n\nconst makeConfiguredStore = (reducer, initialState) =>\n    createStore(\n        reducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(thunkMiddleware, logger))\n    );\n\n    export const makeStore = (initialState) => {\n\n        const {persistStore, persistReducer} = require('redux-persist');\n        const storage = require('redux-persist/lib/storage').default;\n    \n        const persistConfig = {\n            key: 'nextjs',\n            whitelist: ['mode'],\n            storage\n        };\n    \n        const persistedReducer = persistReducer(persistConfig, reducer);\n        const store = makeConfiguredStore(persistedReducer, initialState);\n    \n        store.__persistor = persistStore(store); // Nasty hack\n        window.store = store;\n        return store;\n};\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}