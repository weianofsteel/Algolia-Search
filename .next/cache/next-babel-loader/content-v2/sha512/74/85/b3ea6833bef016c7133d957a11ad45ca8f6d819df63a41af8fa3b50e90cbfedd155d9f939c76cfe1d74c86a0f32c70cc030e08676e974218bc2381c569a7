{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer, { exampleInitialState } from \"./reducer\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    var _require2 = require(\"redux-logger\"),\n        logger = _require2.logger;\n\n    middleware.push(logger);\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var store = createStore(rootReducer, initialState, bindMiddleware([thunkMiddleware]));\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/USER/Desktop/weian/redux/store.js"],"names":["applyMiddleware","createStore","thunkMiddleware","rootReducer","exampleInitialState","bindMiddleware","middleware","require","composeWithDevTools","logger","push","configureStore","initialState","store"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,WAAjD;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,YAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAAA,oBAGtBD,OAAO,CAAC,cAAD,CAHe;AAAA,QAGjCE,MAHiC,aAGjCA,MAHiC;;AAIzCH,IAAAA,UAAU,CAACI,IAAX,CAAgBD,MAAhB;AACA,WAAOD,mBAAmB,CAACR,eAAe,MAAf,4BAAmBM,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAON,eAAe,MAAf,4BAAmBM,UAAnB,EAAP;AACD,CATD;;AAWA,SAASK,cAAT,GAA4D;AAAA,MAApCC,YAAoC,uEAArBR,mBAAqB;AAC1D,MAAMS,KAAK,GAAGZ,WAAW,CAACE,WAAD,EAAcS,YAAd,EAA4BP,cAAc,CAAC,CAACH,eAAD,CAAD,CAA1C,CAAzB;AACA,SAAOW,KAAP;AACD;;AAED,eAAeF,cAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport rootReducer, { exampleInitialState } from \"./reducer\";\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    \r\n    const { logger } = require(\"redux-logger\");\r\n    middleware.push(logger);\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = exampleInitialState) {\r\n  const store = createStore(rootReducer, initialState, bindMiddleware([thunkMiddleware]));\r\n  return store;\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}