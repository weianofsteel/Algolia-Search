{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\weian\\\\component\\\\Public\\\\Carousel2.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass CustomizeCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n    this.handleTimer = this.handleTimer.bind(this);\n    this.timer = this.timer.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.handleTimer);\n  }\n\n  handleTimer() {\n    setInterval(() => {\n      this.timer();\n    }, 1000);\n  }\n\n  timer() {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }));\n  }\n\n  handleNext() {\n    if (!this.props.rotateBy) {\n      this.setState(prevState => ({\n        count: prevState.count + 3\n      }));\n    } else {\n      this.setState((prevState, props) => ({\n        count: prevState.count + props.rotateBy\n      }));\n    }\n  }\n\n  handleBack() {\n    if (!this.props.rotateBy) {\n      if (this.state.count > 3) {\n        this.setState(prevState => ({\n          count: prevState.count - 3\n        }));\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n    } else {\n      if (this.state.count > 3) {\n        this.setState((prevState, props) => ({\n          count: prevState.count - props.rotateBy\n        }));\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      imgsrc,\n      rotateBy,\n      mode,\n      controlButton,\n      navigateButton\n    } = this.props;\n    const list = [];\n\n    if (!imgsrc) {\n      return list;\n    } else {\n      if (!rotateBy) {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          list.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: parseInt(this.state.count / 3) % imgsrc.length === i ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgsrc[i],\n                style: {\n                  margin: '0 auto',\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this) : ''\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          list.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: parseInt(this.state.count / rotateBy) % imgsrc.length === i ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgsrc[i],\n                style: {\n                  margin: '0 auto',\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this) : ''\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    const RadioNavigation = [];\n\n    if (!imgsrc) {\n      return RadioNavigation;\n    } else {\n      if (!rotateBy) {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          RadioNavigation.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline',\n              textAlign: 'center'\n            },\n            children: parseInt(this.state.count / 3) % imgsrc.length === i ? /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: 3 * i\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: 3 * i\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          RadioNavigation.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline',\n              textAlign: 'center'\n            },\n            children: parseInt(this.state.count / rotateBy) % imgsrc.length === i ? /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: rotateBy * i\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: rotateBy * i\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          marginLeft: '-1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          md: 1,\n          style: {\n            paddingLeft: 0\n          },\n          children: controlButton === true && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              color: mode === 'day' ? 'black' : 'white'\n            },\n            onClick: this.handleBack,\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), navigateButton === true ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          md: 10,\n          style: {\n            textAlign: 'center'\n          },\n          children: RadioNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          style: {\n            textAlign: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          md: 1,\n          children: controlButton === true && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleNext,\n            style: {\n              color: mode === 'day' ? 'black' : 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomizeCarousel;","map":{"version":3,"sources":["C:/Users/USER/Desktop/weian/component/Public/Carousel2.js"],"names":["React","Grid","ArrowBackIosIcon","ArrowForwardIosIcon","Button","PlayCircleFilledIcon","RadioButtonUncheckedIcon","IconButton","CustomizeCarousel","Component","constructor","props","state","count","handleTimer","bind","timer","handleNext","handleBack","componentDidMount","componentWillUnmount","clearInterval","setInterval","setState","prevState","rotateBy","render","imgsrc","mode","controlButton","navigateButton","list","i","length","push","parseInt","width","margin","RadioNavigation","display","textAlign","marginLeft","paddingLeft","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Button from '@material-ui/core/Button';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass CustomizeCarousel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0\r\n        }\r\n\r\n        this.handleTimer = this.handleTimer.bind(this);\r\n        this.timer = this.timer.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleTimer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.handleTimer);\r\n    }\r\n\r\n    handleTimer() {\r\n        setInterval(()=>{this.timer();},1000);\r\n    }\r\n\r\n    timer() {\r\n        this.setState((prevState)=>({\r\n            count: prevState.count + 1\r\n        }));\r\n    }\r\n\r\n    handleNext() {\r\n        if(!this.props.rotateBy) {\r\n            this.setState((prevState)=>({\r\n                count: prevState.count + 3\r\n            }));\r\n        }else {\r\n            this.setState((prevState, props)=>({\r\n                count: prevState.count + props.rotateBy\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleBack() {\r\n        if(!this.props.rotateBy) {\r\n            if(this.state.count > 3) {\r\n                this.setState((prevState)=>({\r\n                    count: prevState.count - 3\r\n                }));\r\n            }else {\r\n                this.setState({count: 0});\r\n            }\r\n        }else {\r\n            if(this.state.count > 3) {\r\n                this.setState((prevState, props)=>({\r\n                    count: prevState.count - props.rotateBy\r\n                }));\r\n            }else {\r\n                this.setState({count: 0});\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {\r\n            imgsrc,\r\n            rotateBy,\r\n            mode,\r\n            controlButton,\r\n            navigateButton\r\n        } = this.props;\r\n\r\n        const list = [];\r\n\r\n        if(!imgsrc) {\r\n            return list\r\n        }else {\r\n            if(!rotateBy) {\r\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\r\n                    list.push(\r\n                        <div key={i}>\r\n                            {parseInt( this.state.count / 3) % imgsrc.length === i ?\r\n                                <div style={{width:'100%'}}>\r\n                                    <img src={imgsrc[i]} style={{margin: '0 auto', width:'100%'}}/>\r\n                                </div>\r\n                            :''}        \r\n                        </div>\r\n                    )\r\n                }\r\n            }else {\r\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\r\n                    list.push(\r\n                        <div key={i}>\r\n                            {parseInt( this.state.count / rotateBy) % imgsrc.length === i ?\r\n                                <div style={{width:'100%'}}>\r\n                                    <img src={imgsrc[i]} style={{margin: '0 auto', width:'100%'}}/>\r\n                                </div>\r\n                            :''}        \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    \r\n        const RadioNavigation = [];\r\n\r\n        if(!imgsrc) {\r\n            return RadioNavigation\r\n        }\r\n        else {\r\n            if(!rotateBy) {\r\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\r\n                    RadioNavigation.push(\r\n                        <div key={i} style={{display:'inline', textAlign:'center'}}>\r\n                            {parseInt( this.state.count / 3) % imgsrc.length === i ?\r\n                                <IconButton size=\"small\" onClick={()=>{this.setState({count: 3 * i})}}>\r\n                                    <PlayCircleFilledIcon/>\r\n                                </IconButton>\r\n                            :\r\n                                <IconButton size=\"small\" onClick={()=>{this.setState({count: 3 * i})}}>\r\n                                    <RadioButtonUncheckedIcon/>\r\n                                </IconButton>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            }else {\r\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\r\n                    RadioNavigation.push(\r\n                        <div key={i} style={{display:'inline', textAlign:'center'}}>\r\n                            {parseInt( this.state.count / rotateBy) % imgsrc.length === i ?\r\n                                <IconButton size=\"small\" onClick={()=>{this.setState({count: rotateBy * i})}}>\r\n                                    <PlayCircleFilledIcon/>\r\n                                </IconButton>\r\n                            :\r\n                                <IconButton size=\"small\" onClick={()=>{this.setState({count: rotateBy * i})}}>\r\n                                    <RadioButtonUncheckedIcon/>\r\n                                </IconButton>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <Grid container>\r\n                \r\n                    <Grid item xs={12}>\r\n                        {list}\r\n                    </Grid>\r\n\r\n                \r\n                </Grid>\r\n\r\n                <Grid container style={{marginLeft:'-1rem'}}>\r\n                    <Grid item xs={1} md={1} style={{paddingLeft:0}}>\r\n                        {controlButton === true &&\r\n                            <Button \r\n                                style={{color:(mode==='day'?'black':'white')}}\r\n                                onClick={this.handleBack}\r\n                            >\r\n                                <ArrowBackIosIcon/>\r\n                            </Button>\r\n                        }\r\n                    </Grid>\r\n                    {navigateButton===true?\r\n                        <Grid item xs={10} md={10} style={{textAlign:'center'}}>\r\n                            {RadioNavigation}\r\n                        </Grid>\r\n                        :<Grid item xs={10} style={{textAlign:'center'}}></Grid>\r\n                    }               \r\n                    <Grid item xs={1} md={1}>\r\n                        {controlButton === true &&\r\n                            <Button \r\n                                onClick={this.handleNext}\r\n                                style={{color:(mode==='day'?'black':'white')}}\r\n                            >\r\n                                <ArrowForwardIosIcon/>\r\n                            </Button>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomizeCarousel;"]},"metadata":{},"sourceType":"module"}