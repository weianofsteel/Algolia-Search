{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer, { exampleInitialState } from \"./reducer\";\n\nconst bindMiddleware = middleware => {\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require(\"redux-devtools-extension\");\n\n    const {\n      logger\n    } = require(\"redux-logger\");\n\n    middleware.push(logger);\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState = exampleInitialState) {\n  const store = createStore(rootReducer, initialState, bindMiddleware([thunkMiddleware]));\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/USER/Desktop/weian/redux/store.js"],"names":["applyMiddleware","createStore","thunkMiddleware","rootReducer","exampleInitialState","bindMiddleware","middleware","composeWithDevTools","require","logger","push","configureStore","initialState","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,WAAjD;;AAEA,MAAMC,cAAc,GAAGC,UAAU,IAAI;AACnC,YAA2C;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAaD,OAAO,CAAC,cAAD,CAA1B;;AACAF,IAAAA,UAAU,CAACI,IAAX,CAAgBD,MAAhB;AACA,WAAOF,mBAAmB,CAACP,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAA1B;AACD;;AACD,SAAON,eAAe,CAAC,GAAGM,UAAJ,CAAtB;AACD,CATD;;AAWA,SAASK,cAAT,CAAwBC,YAAY,GAAGR,mBAAvC,EAA4D;AAC1D,QAAMS,KAAK,GAAGZ,WAAW,CAACE,WAAD,EAAcS,YAAd,EAA4BP,cAAc,CAAC,CAACH,eAAD,CAAD,CAA1C,CAAzB;AACA,SAAOW,KAAP;AACD;;AAED,eAAeF,cAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport rootReducer, { exampleInitialState } from \"./reducer\";\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    \r\n    const { logger } = require(\"redux-logger\");\r\n    middleware.push(logger);\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = exampleInitialState) {\r\n  const store = createStore(rootReducer, initialState, bindMiddleware([thunkMiddleware]));\r\n  return store;\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}