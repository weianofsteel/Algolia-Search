{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React-instantsearch\\\\component\\\\Algolia\\\\Algolia.js\";\nimport React from 'react';\nimport styles from '../../css/App.module.css';\nimport App from './App';\nimport algoliasearch from 'algoliasearch/lite';\nimport { useDispatch } from 'react-redux';\nimport { toTest } from '../../store';\nimport { useSelector } from 'react-redux';\nconst client = algoliasearch('XIMRNVJLQ7', 'c73127fdd3af113650bd9b88eec377b5');\nconst index = client.initIndex('Community_articles_staging');\n\nconst Algolia = () => {\n  const [inputValue, setInputValue] = React.useState('');\n  const [inputError, setInputError] = React.useState('');\n  const [list, setList] = React.useState([]);\n  const [listLength, setListLength] = React.useState(0);\n  const [isSearching, setIsSearching] = React.useState(false);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n    setIsSearching(true);\n\n    if (e.target.value) {\n      index.search(e.target.value, {\n        // page:1,\n        hitsPerPage: 1000\n      }).then(({\n        hits\n      }) => {\n        console.log(hits, 888);\n        setList(hits);\n        setListLength(hits.length);\n        setIsSearching(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setList([]);\n      setIsSearching(false);\n      setListLength(0);\n    }\n  }; // const test = useSelector((state) => state.test)\n  // const dispatch = useDispatch()\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.outerBlock,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.block,\n          style: {\n            paddingBottom: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputBackground,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValue,\n              className: styles.input,\n              onChange: handleChange // onKeyDown={()=>{\n              //     if(KeyboardEvent.code == 'enter' && !inputValue){\n              //         setInputError('Try it!')\n              //     }\n              // }}\n              // onKeyPress={this.handleKeyPress.bind(this)}\n              // onFocus={() => !locked && this.setState({ active: true })}\n              // onBlur={() => !locked && this.setState({ active: false })}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), isSearching ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dataAmount,\n            children: \"Searching...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dataAmount,\n            children: [listLength, \" posts found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(App, {\n            inputValue: inputValue,\n            list: list\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Algolia;","map":{"version":3,"sources":["C:/Users/USER/Desktop/React-instantsearch/component/Algolia/Algolia.js"],"names":["React","styles","App","algoliasearch","useDispatch","toTest","useSelector","client","index","initIndex","Algolia","inputValue","setInputValue","useState","inputError","setInputError","list","setList","listLength","setListLength","isSearching","setIsSearching","handleChange","e","target","value","search","hitsPerPage","then","hits","console","log","length","catch","err","box","outerBlock","block","paddingBottom","inputBackground","input","dataAmount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styles from '../../css/App.module.css'\r\nimport App from './App'\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport { useDispatch } from 'react-redux'\r\nimport { toTest } from '../../store'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst client = algoliasearch(\r\n    'XIMRNVJLQ7',\r\n    'c73127fdd3af113650bd9b88eec377b5'\r\n);\r\n\r\nconst index = client.initIndex('Community_articles_staging');\r\n\r\nconst Algolia = () => {\r\n\r\n    const [ inputValue, setInputValue ] = React.useState('');\r\n    const [ inputError, setInputError ] = React.useState('');\r\n    const [ list , setList ] = React.useState([]);\r\n    const [ listLength , setListLength ] = React.useState(0);\r\n    const [ isSearching , setIsSearching ] = React.useState(false);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n        setIsSearching(true);\r\n        \r\n        if(e.target.value){\r\n            index\r\n            .search(e.target.value, {\r\n                // page:1,\r\n                hitsPerPage: 1000\r\n            })\r\n            .then(({ hits }) => {\r\n                console.log(hits, 888);\r\n                setList(hits);\r\n                setListLength(hits.length);\r\n                setIsSearching(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            }); \r\n        } else{\r\n            setList([]);\r\n            setIsSearching(false);\r\n            setListLength(0);\r\n        }\r\n    }\r\n\r\n    // const test = useSelector((state) => state.test)\r\n    // const dispatch = useDispatch()\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={styles.box}>\r\n            <div className={styles.outerBlock}>\r\n            \r\n                <div className={styles.block} style={{paddingBottom:'5px'}}>\r\n                    \r\n                    {/* <div className={styles.header}>\r\n                        <form>\r\n                            <input className={styles.input} type=\"text\"/>\r\n                        </form>\r\n                    </div> */}\r\n\r\n                    <div className={styles.inputBackground}>\r\n                        \r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue}\r\n                            className={styles.input}\r\n                            onChange={handleChange}\r\n                            // onKeyDown={()=>{\r\n                            //     if(KeyboardEvent.code == 'enter' && !inputValue){\r\n                            //         setInputError('Try it!')\r\n                            //     }\r\n                            // }}\r\n                            // onKeyPress={this.handleKeyPress.bind(this)}\r\n                            // onFocus={() => !locked && this.setState({ active: true })}\r\n                            // onBlur={() => !locked && this.setState({ active: false })}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    {isSearching?\r\n                        <div className={styles.dataAmount}>\r\n                            Searching...\r\n                        </div>:\r\n                        <div className={styles.dataAmount}>\r\n                            {listLength} posts found\r\n                        </div>\r\n                    }\r\n\r\n                    <App\r\n                        inputValue={inputValue}\r\n                        list={list}\r\n                    />\r\n\r\n                </div>\r\n                {/* <App\r\n                    inputValue={inputValue}\r\n                    list={list}\r\n                /> */}\r\n                {/* <button onClick={()=>dispatch(toTest())}>test2</button> */}\r\n            </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default Algolia"]},"metadata":{},"sourceType":"module"}