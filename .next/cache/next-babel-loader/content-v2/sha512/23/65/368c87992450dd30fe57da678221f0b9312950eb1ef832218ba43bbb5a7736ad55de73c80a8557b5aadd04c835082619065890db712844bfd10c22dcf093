{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wangweian/Desktop/weianwang/component/Public/PublicComponent.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Select as MaterialSelect, InputLabel, FormControl, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles({\n  inputLabel: {\n    fontSize: \"17px\",\n    fontFamily: \"微軟正黑體\",\n    display: \"flex\",\n    flexDirection: \"row-Reverse\"\n  },\n  selectRequired: {\n    marginLeft: \"-7px\"\n  }\n});\nexport function Select(props) {\n  const classes = useStyles();\n  const {\n    label,\n    value,\n    name,\n    items,\n    formControlProps,\n    selectProps,\n    required,\n    disabled = false,\n    tabIndex = 0,\n    mode\n  } = props;\n\n  let newProps = _objectSpread({}, props);\n\n  delete newProps[\"helperText\"];\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, formControlProps), {}, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    disabled: disabled,\n    style: {\n      color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      required: required,\n      id: \"demo-simple-select-label\",\n      classes: {\n        root: classes.inputLabel,\n        required: classes.selectRequired\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialSelect, _objectSpread(_objectSpread(_objectSpread({}, selectProps), {}, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      inputProps: {\n        name: name,\n        classes: {\n          select: classes.input\n        }\n      },\n      SelectDisplayProps: {\n        tabIndex: tabIndex\n      },\n      value: value === null ? \"\" : value,\n      label: label,\n      displayEmpty: true,\n      renderValue: selected => {\n        function checkEqual(a, b) {\n          if (a === null || a === undefined) {\n            a = \"\";\n          }\n\n          if (b === null || b === undefined) {\n            b = \"\";\n          }\n\n          if (typeof a === \"number\") {\n            a = a.toString();\n          }\n\n          if (typeof b === \"number\") {\n            b = b.toString();\n          }\n\n          return a == b;\n        }\n\n        let filters = items.filter(item => checkEqual(item.value, selected));\n        return filters[0] ? filters[0][\"label\"] : \"\";\n      }\n    }, newProps), {}, {\n      children: items.map(function (item, index) {\n        var _item$props, _item$value, _item$label;\n\n        return /*#__PURE__*/_createElement(MenuItem, _objectSpread(_objectSpread({}, (_item$props = item.props) !== null && _item$props !== void 0 ? _item$props : null), {}, {\n          key: index,\n          value: (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : \"\",\n          classes: {\n            root: classes.input\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }), (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : \"\");\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\nSelect.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  formControlProps: PropTypes.object,\n  inputLabelProps: PropTypes.object,\n  selectProps: PropTypes.object\n};","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/component/Public/PublicComponent.js"],"names":["makeStyles","Select","MaterialSelect","InputLabel","FormControl","MenuItem","PropTypes","useStyles","inputLabel","fontSize","fontFamily","display","flexDirection","selectRequired","marginLeft","props","classes","label","value","name","items","formControlProps","selectProps","required","disabled","tabIndex","mode","newProps","color","root","select","input","selected","checkEqual","a","b","undefined","toString","filters","filter","item","map","index","propTypes","string","oneOfType","number","isRequired","onChange","func","array","object","inputLabelProps"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Select as MaterialSelect, InputLabel, FormControl, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n    inputLabel: {\n        fontSize:\"17px\",\n        fontFamily:\"微軟正黑體\",\n        display: \"flex\",\n        flexDirection: \"row-Reverse\"\n    },\n    selectRequired:{\n        marginLeft:\"-7px\"\n    },\n})\n\nexport function Select(props) {\n    const classes = useStyles();\n    const {\n        label,\n        value,\n        name,\n        items,\n        formControlProps,\n        selectProps,\n        required,\n        disabled =false,\n        tabIndex=0,\n        mode\n    } = props;\n\n    let newProps = {\n        ...props\n    };\n    delete newProps[\"helperText\"];\n\n    return (\n        <FormControl\n            {...formControlProps}\n            size=\"small\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n            style={{color:(mode==='day'?'#1F1F1F':'#FFFFFF')}}\n        >\n            <InputLabel\n                required={required}\n                id=\"demo-simple-select-label\"\n                classes={{\n                    root:classes.inputLabel,\n                    required:classes.selectRequired\n                }}\n            >\n                {label}\n            </InputLabel>\n            <MaterialSelect\n                {...selectProps}\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                inputProps={{\n                    name: name,\n                    classes: {select: classes.input},\n                }}\n                SelectDisplayProps={{\n                    tabIndex:tabIndex\n                }}\n\n                value={value===null?\"\":value}\n                label={label}\n                displayEmpty={true}\n                renderValue={selected => {\n                    function checkEqual(a,b){\n                        if (a === null || a===undefined){\n                            a = \"\";\n                        }\n\n                        if (b === null || b ===undefined){\n                            b = \"\";\n                        }\n\n                        if (typeof a === \"number\"){\n                            a = a.toString();\n                        }\n\n                        if (typeof b === \"number\"){\n                            b = b.toString();\n                        }\n\n                        return a == b;\n                    }\n\n                    let filters= items.filter(item=> checkEqual(item.value,selected)  )\n\n                    return filters[0]?filters[0][\"label\"]:\"\";\n                }}\n                {...newProps}\n            >\n                {items.map(function(item,index) {\n                    return (\n                        <MenuItem\n                            {...item.props ?? null}\n                            key={index}\n                            value={item.value??\"\"}\n                            classes={{root:classes.input}}\n                        >\n                            {item.label??\"\"}\n                        </MenuItem>\n                    )\n                })}\n            </MaterialSelect>\n        </FormControl>\n    );\n}\n\nSelect.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    formControlProps: PropTypes.object,\n    inputLabelProps: PropTypes.object,\n    selectProps: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}