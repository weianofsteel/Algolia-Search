{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\weian\\\\pages\\\\_error\\\\index.js\",\n    _this = this;\n\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../../i18n';\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode,\n      t = _ref.t;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: statusCode ? t('error-with-status', {\n      statusCode: statusCode\n    }) : t('error-without-status')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Error;\n\nError.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, statusCode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err;\n            statusCode = null;\n\n            if (res) {\n              statusCode = res.statusCode;\n            } else if (err) {\n              statusCode = err.statusCode;\n            }\n\n            return _context.abrupt(\"return\", {\n              namespacesRequired: ['common'],\n              statusCode: statusCode\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nError.defaultProps = {\n  statusCode: null\n};\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(Error);\n\nvar _c;\n\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/weian/pages/_error/index.js"],"names":["PropTypes","withTranslation","Error","statusCode","t","getInitialProps","res","err","namespacesRequired","defaultProps","propTypes","number","func","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,CAAf,QAAeA,CAAf;AAAA,sBACZ;AAAA,cACGD,UAAU,GACPC,CAAC,CAAC,mBAAD,EAAsB;AAAED,MAAAA,UAAU,EAAVA;AAAF,KAAtB,CADM,GAEPC,CAAC,CAAC,sBAAD;AAHP;AAAA;AAAA;AAAA;AAAA,WADY;AAAA,CAAd;;KAAMF,K;;AAQNA,KAAK,CAACG,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AAClBJ,YAAAA,UADkB,GACL,IADK;;AAEtB,gBAAIG,GAAJ,EAAS;AACJH,cAAAA,UADI,GACWG,GADX,CACJH,UADI;AAER,aAFD,MAEO,IAAII,GAAJ,EAAS;AACXJ,cAAAA,UADW,GACII,GADJ,CACXJ,UADW;AAEf;;AANqB,6CAOf;AACLK,cAAAA,kBAAkB,EAAE,CAAC,QAAD,CADf;AAELL,cAAAA,UAAU,EAAVA;AAFK,aAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAaAD,KAAK,CAACO,YAAN,GAAqB;AACnBN,EAAAA,UAAU,EAAE;AADO,CAArB;AAIAD,KAAK,CAACQ,SAAN,GAAkB;AAChBP,EAAAA,UAAU,EAAEH,SAAS,CAACW,MADN;AAEhBP,EAAAA,CAAC,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AAFF,CAAlB;AAKA,eAAeZ,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { withTranslation } from '../../i18n'\r\n\r\nconst Error = ({ statusCode, t }) => (\r\n  <p>\r\n    {statusCode\r\n      ? t('error-with-status', { statusCode })\r\n      : t('error-without-status')}\r\n  </p>\r\n)\r\n\r\nError.getInitialProps = async ({ res, err }) => {\r\n  let statusCode = null\r\n  if (res) {\r\n    ({ statusCode } = res)\r\n  } else if (err) {\r\n    ({ statusCode } = err)\r\n  }\r\n  return {\r\n    namespacesRequired: ['common'],\r\n    statusCode,\r\n  }\r\n}\r\n\r\nError.defaultProps = {\r\n  statusCode: null,\r\n}\r\n\r\nError.propTypes = {\r\n  statusCode: PropTypes.number,\r\n  t: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withTranslation('common')(Error)"]},"metadata":{},"sourceType":"module"}