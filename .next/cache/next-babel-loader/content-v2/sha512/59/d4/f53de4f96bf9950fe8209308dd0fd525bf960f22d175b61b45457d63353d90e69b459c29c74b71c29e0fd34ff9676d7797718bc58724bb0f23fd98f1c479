{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wangweian/Desktop/weianwang/component/Sample.js\",\n    _this = this;\n\nimport React from 'react';\nimport { i18n, withTranslation } from '../i18n';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport TranslateIcon from '@material-ui/icons/Translate';\n\nvar Sample = function Sample(_ref) {\n  var t = _ref.t;\n\n  var handleLanguage = function handleLanguage() {\n    i18n.changeLanguage(i18n.language === 'en' ? 'zhHant' : 'en');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: classes.link,\n        style: {\n          backgroundColor: 'transparent'\n        },\n        disableRipple: true,\n        onClick: handleLanguage,\n        children: [/*#__PURE__*/_jsxDEV(TranslateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, _this), \"language/\\u8A9E\\u8A00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: t('title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Sample;\nSample.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('sample')(Sample);\n\nvar _c;\n\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/component/Sample.js"],"names":["React","i18n","withTranslation","Button","PropTypes","TranslateIcon","Sample","t","handleLanguage","changeLanguage","language","classes","link","backgroundColor","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,SAAtC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAS;AAAA,MAAPC,CAAO,QAAPA,CAAO;;AAEpB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBP,IAAAA,IAAI,CAACQ,cAAL,CAAoBR,IAAI,CAACS,QAAL,KAAkB,IAAlB,GAAyB,QAAzB,GAAoC,IAAxD;AACD,GAFH;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEI;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAEC,OAAO,CAACC,IAFvB;AAGI,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAHX;AAII,QAAA,aAAa,EAAE,IAJnB;AAKI,QAAA,OAAO,EAAEL,cALb;AAAA,gCAOI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,iBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbJ,eAgBI;AAAA,gBACKD,CAAC,CAAC,OAAD;AADN;AAAA;AAAA;AAAA;AAAA,aAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CA9BD;;KAAMD,M;AAgCNA,MAAM,CAACQ,SAAP,GAAmB;AACfP,EAAAA,CAAC,EAAEH,SAAS,CAACW,IAAV,CAAeC;AADH,CAAnB;AAIA,eAAed,eAAe,CAAC,QAAD,CAAf,CAA0BI,MAA1B,CAAf","sourcesContent":["import React from 'react'\nimport { i18n, withTranslation } from '../i18n'\nimport Button from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\nimport TranslateIcon from '@material-ui/icons/Translate'\n\nconst Sample = ({t}) => {\n\n    const handleLanguage = () => {\n        i18n.changeLanguage(i18n.language === 'en' ? 'zhHant' : 'en')\n      }\n\n    return(\n        <React.Fragment>\n            \n            <div>\n                <Button\n                    type='button'\n                    className={classes.link}\n                    style={{backgroundColor: 'transparent'}}\n                    disableRipple={true}\n                    onClick={handleLanguage}\n                  >\n                    <TranslateIcon/>language/語言\n                  </Button>\n            </div>\n            <div>\n                Test      \n            </div>\n            <div>\n                {t('title')}\n            </div>\n                    \n                    \n        </React.Fragment>\n    )\n}\n\nSample.propTypes = {\n    t: PropTypes.func.isRequired,\n  }\n\nexport default withTranslation('sample')(Sample)"]},"metadata":{},"sourceType":"module"}