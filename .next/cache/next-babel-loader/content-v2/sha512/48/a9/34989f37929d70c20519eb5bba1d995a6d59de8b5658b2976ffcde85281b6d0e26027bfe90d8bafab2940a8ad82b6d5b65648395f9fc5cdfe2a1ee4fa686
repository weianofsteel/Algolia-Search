{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React-instantsearch\\\\component\\\\Algolia\\\\Algolia.js\";\nimport React from 'react';\nimport styles from '../../css/App.module.css';\nimport App from './App';\nimport algoliasearch from 'algoliasearch/lite';\nimport { useDispatch } from 'react-redux';\nimport { toTest } from '../../store';\nimport { useSelector } from 'react-redux';\nconst client = algoliasearch('XIMRNVJLQ7', 'c73127fdd3af113650bd9b88eec377b5');\nconst index = client.initIndex('Community_articles_staging');\n\nconst Algolia = () => {\n  const [inputValue, setInputValue] = React.useState('');\n  const [inputError, setInputError] = React.useState('');\n  const [list, setList] = React.useState([]);\n  const [listLength, setListLength] = React.useState(0);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n\n    if (e.target.value) {\n      index.search(e.target.value, {\n        page: 2,\n        hitsPerPage: 100\n      }).then(({\n        hits\n      }) => {\n        console.log(hits, 888);\n        setList(hits);\n        setListLength(hits.length);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setList([]);\n    }\n  }; // const test = useSelector((state) => state.test)\n  // const dispatch = useDispatch()\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.outerBlock,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.block,\n          style: {\n            paddingBottom: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputBackground,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValue,\n              className: styles.input,\n              onChange: handleChange // onKeyDown={()=>{\n              //     if(KeyboardEvent.code == 'enter' && !inputValue){\n              //         setInputError('Try it!')\n              //     }\n              // }}\n              // onKeyPress={this.handleKeyPress.bind(this)}\n              // onFocus={() => !locked && this.setState({ active: true })}\n              // onBlur={() => !locked && this.setState({ active: false })}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dataAmount,\n            children: \"1000 posts found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(App, {\n            inputValue: inputValue,\n            list: list,\n            listLength: listLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Algolia;","map":{"version":3,"sources":["C:/Users/USER/Desktop/React-instantsearch/component/Algolia/Algolia.js"],"names":["React","styles","App","algoliasearch","useDispatch","toTest","useSelector","client","index","initIndex","Algolia","inputValue","setInputValue","useState","inputError","setInputError","list","setList","listLength","setListLength","handleChange","e","target","value","search","page","hitsPerPage","then","hits","console","log","length","catch","err","box","outerBlock","block","paddingBottom","inputBackground","input","dataAmount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styles from '../../css/App.module.css'\r\nimport App from './App'\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport { useDispatch } from 'react-redux'\r\nimport { toTest } from '../../store'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst client = algoliasearch(\r\n    'XIMRNVJLQ7',\r\n    'c73127fdd3af113650bd9b88eec377b5'\r\n);\r\n\r\nconst index = client.initIndex('Community_articles_staging');\r\n\r\nconst Algolia = () => {\r\n\r\n    const [inputValue, setInputValue] = React.useState('');\r\n    const [inputError, setInputError] = React.useState('');\r\n    const [list , setList] = React.useState([]);\r\n    const [listLength , setListLength] = React.useState(0);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n        \r\n        if(e.target.value){\r\n            \r\n            index\r\n            .search(e.target.value, {\r\n                page: 2,\r\n                hitsPerPage: 100\r\n            })\r\n            .then(({ hits }) => {\r\n                console.log(hits, 888);\r\n                setList(hits);\r\n                setListLength(hits.length);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            }); \r\n        } else{\r\n            setList([])\r\n        }\r\n    }\r\n\r\n    // const test = useSelector((state) => state.test)\r\n    // const dispatch = useDispatch()\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={styles.box}>\r\n            <div className={styles.outerBlock}>\r\n            \r\n                <div className={styles.block} style={{paddingBottom:'5px'}}>\r\n                    \r\n                    {/* <div className={styles.header}>\r\n                        <form>\r\n                            <input className={styles.input} type=\"text\"/>\r\n                        </form>\r\n                    </div> */}\r\n\r\n                    <div className={styles.inputBackground}>\r\n                        \r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue}\r\n                            className={styles.input}\r\n                            onChange={handleChange}\r\n                            // onKeyDown={()=>{\r\n                            //     if(KeyboardEvent.code == 'enter' && !inputValue){\r\n                            //         setInputError('Try it!')\r\n                            //     }\r\n                            // }}\r\n                            // onKeyPress={this.handleKeyPress.bind(this)}\r\n                            // onFocus={() => !locked && this.setState({ active: true })}\r\n                            // onBlur={() => !locked && this.setState({ active: false })}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className={styles.dataAmount}>\r\n                        1000 posts found\r\n                    </div>\r\n\r\n                    <App\r\n                        inputValue={inputValue}\r\n                        list={list}\r\n                        listLength={listLength}\r\n                    />\r\n\r\n                </div>\r\n                {/* <App\r\n                    inputValue={inputValue}\r\n                    list={list}\r\n                /> */}\r\n                {/* <button onClick={()=>dispatch(toTest())}>test2</button> */}\r\n            </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default Algolia"]},"metadata":{},"sourceType":"module"}