{"ast":null,"code":"import logger from 'redux-logger';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers';\n\nconst makeConfiguredStore = (reducer, initialState) => createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware, logger)));\n\nexport const makeStore = (initialState, {\n  isServer\n}) => {\n  if (isServer) {\n    initialState = initialState;\n    return makeConfiguredStore(reducer, initialState);\n  } else {\n    const {\n      persistStore,\n      persistReducer\n    } = require('redux-persist');\n\n    const storage = require('redux-persist/lib/storage').default;\n\n    const persistConfig = {\n      key: 'nextjs',\n      whitelist: ['mode'],\n      storage\n    };\n    const persistedReducer = persistReducer(persistConfig, reducer);\n    const store = makeConfiguredStore(persistedReducer, initialState);\n    store.__persistor = persistStore(store); // Nasty hack\n\n    window.store = store;\n    return store;\n  }\n};","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/redux/redux.js"],"names":["logger","applyMiddleware","createStore","composeWithDevTools","thunkMiddleware","reducer","makeConfiguredStore","initialState","makeStore","isServer","persistStore","persistReducer","require","storage","default","persistConfig","key","whitelist","persistedReducer","store","__persistor","window"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,mBAAmB,GAAG,CAACD,OAAD,EAAUE,YAAV,KACxBL,WAAW,CACPG,OADO,EAEPE,YAFO,EAGPJ,mBAAmB,CAACF,eAAe,CAACG,eAAD,EAAkBJ,MAAlB,CAAhB,CAHZ,CADf;;AAOI,OAAO,MAAMQ,SAAS,GAAG,CAACD,YAAD,EAAe;AAAEE,EAAAA;AAAF,CAAf,KAAgC;AAErD,MAAIA,QAAJ,EAAc;AACVF,IAAAA,YAAY,GAAGA,YAAf;AACA,WAAOD,mBAAmB,CAACD,OAAD,EAAUE,YAAV,CAA1B;AAEH,GAJD,MAIO;AACH,UAAM;AAACG,MAAAA,YAAD;AAAeC,MAAAA;AAAf,QAAiCC,OAAO,CAAC,eAAD,CAA9C;;AACA,UAAMC,OAAO,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,OAArD;;AAEA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,GAAG,EAAE,QADa;AAElBC,MAAAA,SAAS,EAAE,CAAC,MAAD,CAFO;AAGlBJ,MAAAA;AAHkB,KAAtB;AAMA,UAAMK,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBV,OAAhB,CAAvC;AACA,UAAMc,KAAK,GAAGb,mBAAmB,CAACY,gBAAD,EAAmBX,YAAnB,CAAjC;AAEAY,IAAAA,KAAK,CAACC,WAAN,GAAoBV,YAAY,CAACS,KAAD,CAAhC,CAbG,CAasC;;AACzCE,IAAAA,MAAM,CAACF,KAAP,GAAeA,KAAf;AACA,WAAOA,KAAP;AACH;AACJ,CAvBM","sourcesContent":["import logger from 'redux-logger';\nimport {applyMiddleware, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers'\n\nconst makeConfiguredStore = (reducer, initialState) =>\n    createStore(\n        reducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(thunkMiddleware, logger))\n    );\n\n    export const makeStore = (initialState, { isServer }) => {\n\n        if (isServer) {\n            initialState = initialState ;\n            return makeConfiguredStore(reducer, initialState);\n    \n        } else {\n            const {persistStore, persistReducer} = require('redux-persist');\n            const storage = require('redux-persist/lib/storage').default;\n    \n            const persistConfig = {\n                key: 'nextjs',\n                whitelist: ['mode'],\n                storage\n            };\n    \n            const persistedReducer = persistReducer(persistConfig, reducer);\n            const store = makeConfiguredStore(persistedReducer, initialState);\n    \n            store.__persistor = persistStore(store); // Nasty hack\n            window.store = store;\n            return store;\n        }\n    };"]},"metadata":{},"sourceType":"module"}