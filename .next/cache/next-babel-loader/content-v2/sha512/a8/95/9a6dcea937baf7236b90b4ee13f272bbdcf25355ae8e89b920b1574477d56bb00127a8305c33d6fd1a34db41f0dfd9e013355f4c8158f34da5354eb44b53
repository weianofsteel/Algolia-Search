{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nvar store;\nvar initialState = {\n  mode: 'day'\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DAY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mode: 'day'\n      });\n\n    case 'NIGHT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mode: 'night'\n      });\n\n    case 'RESET':\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nfunction initStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n}\n\nexport var initializeStore = function initializeStore(preloadedState) {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (false) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n}\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/weian/store.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","store","initialState","mode","reducer","state","action","type","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,IAAIC,KAAJ;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC;AADY,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,6CACKF,KADL;AAEEF,QAAAA,IAAI,EAAE;AAFR;;AAIF,SAAK,OAAL;AACE,6CACKE,KADL;AAEEF,QAAAA,IAAI,EAAE;AAFR;;AAIF,SAAK,OAAL;AACE,+BACKE,KADL;;AAGF;AACE,aAAOA,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,SAASG,SAAT,GAAkD;AAAA,MAA/BC,cAA+B,uEAAdP,YAAc;AAChD,SAAOJ,WAAW,CAChBM,OADgB,EAEhBK,cAFgB,EAGhBT,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD;;AAED,OAAO,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACD,cAAD,EAAoB;AAAA;;AACjD,MAAIE,MAAM,cAAGV,KAAH,6CAAYO,SAAS,CAACC,cAAD,CAA/B,CADiD,CAGjD;AACA;;;AACA,MAAIA,cAAc,IAAIR,KAAtB,EAA6B;AAC3BU,IAAAA,MAAM,GAAGH,SAAS,iCACbP,KAAK,CAACW,QAAN,EADa,GAEbH,cAFa,EAAlB,CAD2B,CAK3B;;AACAR,IAAAA,KAAK,GAAGY,SAAR;AACD,GAZgD,CAcjD;;;AACA,aAAmC,OAAOF,MAAP,CAfc,CAgBjD;;AACA,MAAI,CAACV,KAAL,EAAYA,KAAK,GAAGU,MAAR;AAEZ,SAAOA,MAAP;AACD,CApBM;AAsBP,OAAO,SAASG,QAAT,CAAkBZ,YAAlB,EAAgC;AAAA;;AACrC,MAAMD,KAAK,GAAGJ,OAAO,CAAC;AAAA,WAAMa,eAAe,CAACR,YAAD,CAArB;AAAA,GAAD,EAAsC,CAACA,YAAD,CAAtC,CAArB;AACA,SAAOD,KAAP;AACD;;GAHea,Q","sourcesContent":["import { useMemo } from 'react'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nlet store\r\n\r\nconst initialState = {\r\n    mode:'day'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'DAY':\r\n      return {\r\n        ...state,\r\n        mode: 'day',\r\n      }\r\n    case 'NIGHT':\r\n      return {\r\n        ...state,\r\n        mode: 'night',\r\n      }\r\n    case 'RESET':\r\n      return {\r\n        ...state,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction initStore(preloadedState = initialState) {\r\n  return createStore(\r\n    reducer,\r\n    preloadedState,\r\n    composeWithDevTools(applyMiddleware())\r\n  )\r\n}\r\n\r\nexport const initializeStore = (preloadedState) => {\r\n  let _store = store ?? initStore(preloadedState)\r\n\r\n  // After navigating to a page with an initial Redux state, merge that state\r\n  // with the current state in the store, and create a new store\r\n  if (preloadedState && store) {\r\n    _store = initStore({\r\n      ...store.getState(),\r\n      ...preloadedState,\r\n    })\r\n    // Reset the current store\r\n    store = undefined\r\n  }\r\n\r\n  // For SSG and SSR always create a new store\r\n  if (typeof window === 'undefined') return _store\r\n  // Create the store once in the client\r\n  if (!store) store = _store\r\n\r\n  return _store\r\n}\r\n\r\nexport function useStore(initialState) {\r\n  const store = useMemo(() => initializeStore(initialState), [initialState])\r\n  return store\r\n}"]},"metadata":{},"sourceType":"module"}