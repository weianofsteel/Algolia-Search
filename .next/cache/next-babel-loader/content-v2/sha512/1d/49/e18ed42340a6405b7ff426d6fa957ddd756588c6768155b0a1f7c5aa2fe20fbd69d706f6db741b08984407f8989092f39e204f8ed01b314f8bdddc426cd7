{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wangweian/Desktop/weianwang/component/Work/Work.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Header from '../Public/Header';\nimport Banner from '../Public/Banner';\nimport Drawer from '../Public/Drawer';\nexport var Work = function Work() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      drawer = _React$useState2[0],\n      setDrawer = _React$useState2[1];\n\n  useEffect(function () {\n    var isMounted = true; // note this flag denote mount status\n\n    someAsyncOperation().then(function (data) {\n      if (isMounted) setState(data);\n    });\n    return function () {\n      isMounted = false;\n    }; // use effect cleanup to set flag false, if unmounted\n  });\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setDrawer(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setDrawer(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [drawer == false && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          handleDrawerOpen: handleDrawerOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, _this), drawer == true && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        handleDrawerClose: handleDrawerClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Work, \"CflstVoTmZNZ7pIDIOPmz990S2w=\");\n\n_c = Work;\n\nvar _c;\n\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/component/Work/Work.js"],"names":["React","useEffect","Header","Banner","Drawer","Work","useState","drawer","setDrawer","isMounted","someAsyncOperation","then","data","setState","handleDrawerOpen","handleDrawerClose"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,wBAEML,KAAK,CAACM,QAAN,CAAe,KAAf,CAFN;AAAA;AAAA,MAEfC,MAFe;AAAA,MAEPC,SAFO;;AAItBP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIQ,SAAS,GAAG,IAAhB,CADY,CACU;;AACtBC,IAAAA,kBAAkB,GAAGC,IAArB,CAA0B,UAAAC,IAAI,EAAI;AAChC,UAAIH,SAAJ,EAAeI,QAAQ,CAACD,IAAD,CAAR;AAChB,KAFD;AAGA,WAAO,YAAM;AAAEH,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC,CALY,CAKwB;AACrC,GANM,CAAT;;AAQA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BP,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eAEKD,MAAM,IAAI,KAAV,iBACG,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,gBAAgB,EAAEO;AADtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAOI;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAHR,EAgBKP,MAAM,IAAI,IAAV,iBACG,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,iBAAiB,EAAEQ;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAjBR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA2BH,CA/CM;;GAAMV,I;;KAAAA,I","sourcesContent":["import React, { useEffect } from 'react'\nimport Header from '../Public/Header'\nimport Banner from '../Public/Banner'\nimport Drawer from '../Public/Drawer'\n\nexport const Work = () => {\n\n    const [drawer, setDrawer] = React.useState(false);\n\n    useEffect(() => {\n        let isMounted = true; // note this flag denote mount status\n        someAsyncOperation().then(data => {\n          if (isMounted) setState(data);\n        })\n        return () => { isMounted = false }; // use effect cleanup to set flag false, if unmounted\n      });\n    \n    const handleDrawerOpen = () => {\n        setDrawer(true);\n    }\n\n    const handleDrawerClose = () => {\n        setDrawer(false);\n    }\n\n    return(\n        <React.Fragment>\n            \n            {drawer == false &&\n                <React.Fragment>\n                    <div>\n                        <Header\n                            handleDrawerOpen={handleDrawerOpen}\n                        />\n                    </div>\n                    \n                    <div>\n                        <Banner/>\n                    </div>\n                </React.Fragment>\n            }\n\n            {drawer == true &&\n                <React.Fragment>\n                    <Drawer\n                        handleDrawerClose={handleDrawerClose}\n                    />\n                </React.Fragment>\n            }\n            \n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}