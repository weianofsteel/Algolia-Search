{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React-instantsearch\\\\component\\\\Algolia\\\\Algolia.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from '../../css/App.module.css';\nimport App from './App';\nimport algoliasearch from 'algoliasearch/lite';\nimport { useDispatch } from 'react-redux';\nimport { toTest } from '../../store';\nimport { useSelector } from 'react-redux';\nvar client = algoliasearch('XIMRNVJLQ7', 'c73127fdd3af113650bd9b88eec377b5');\nvar index = client.initIndex('Community_articles_staging');\n\nvar Algolia = function Algolia() {\n  _s();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputValue = _React$useState2[0],\n      setInputValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputError = _React$useState4[0],\n      setInputError = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      list = _React$useState6[0],\n      setList = _React$useState6[1];\n\n  var handleChange = function handleChange(e) {\n    dispatch(toTest(e.target.value));\n    setInputValue(e.target.value);\n\n    if (e.target.value) {\n      index.search(e.target.value, {\n        page: 2,\n        hitsPerPage: 1000\n      }).then(function (_ref) {\n        var hits = _ref.hits;\n        console.log(hits, 888);\n        setList(hits);\n      })[\"catch\"](function (err) {\n        console.log(err, 777);\n      });\n    } else {\n      setList([]);\n    }\n  };\n\n  var test = useSelector(function (state) {\n    return state.test;\n  });\n  var dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.outerBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputBackground,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            className: styles.input,\n            onChange: handleChange,\n            onKeyDown: function onKeyDown() {\n              if (KeyboardEvent.code == 'enter' && !inputValue) {\n                setInputError('Try it!');\n              }\n            } // onKeyPress={this.handleKeyPress.bind(this)}\n            // onFocus={() => !locked && this.setState({ active: true })}\n            // onBlur={() => !locked && this.setState({ active: false })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Algolia, \"8Is1sj4eVgWs09dGL911rQ7xRaA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Algolia;\nexport default Algolia;\n\nvar _c;\n\n$RefreshReg$(_c, \"Algolia\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/React-instantsearch/component/Algolia/Algolia.js"],"names":["React","styles","App","algoliasearch","useDispatch","toTest","useSelector","client","index","initIndex","Algolia","useState","inputValue","setInputValue","inputError","setInputError","list","setList","handleChange","e","dispatch","target","value","search","page","hitsPerPage","then","hits","console","log","err","test","state","outerBlock","block","inputBackground","input","KeyboardEvent","code"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styles from '../../css/App.module.css'\r\nimport App from './App'\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport { useDispatch } from 'react-redux'\r\nimport { toTest } from '../../store'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst client = algoliasearch(\r\n    'XIMRNVJLQ7',\r\n    'c73127fdd3af113650bd9b88eec377b5'\r\n);\r\n\r\nconst index = client.initIndex('Community_articles_staging');\r\n\r\nconst Algolia = () => {\r\n\r\n    const [inputValue, setInputValue] = React.useState('');\r\n    const [inputError, setInputError] = React.useState('');\r\n    const [list , setList] = React.useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        dispatch(toTest(e.target.value));\r\n        setInputValue(e.target.value);\r\n        \r\n        if(e.target.value){\r\n            \r\n            index\r\n            .search(e.target.value, {\r\n                page: 2,\r\n                hitsPerPage: 1000\r\n            })\r\n            .then(({ hits }) => {\r\n                console.log(hits, 888);\r\n                setList(hits)\r\n            })\r\n            .catch(err => {\r\n                console.log(err, 777);\r\n            }); \r\n        } else{\r\n            setList([])\r\n        }\r\n    }\r\n\r\n    const test = useSelector((state) => state.test)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={styles.outerBlock}>\r\n            \r\n                <div className={styles.block}>\r\n                    \r\n                    {/* <div className={styles.header}>\r\n                        <form>\r\n                            <input className={styles.input} type=\"text\"/>\r\n                        </form>\r\n                    </div> */}\r\n\r\n                    <div className={styles.inputBackground}>\r\n                        \r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue}\r\n                            className={styles.input}\r\n                            onChange={handleChange}\r\n                            onKeyDown={()=>{\r\n                                if(KeyboardEvent.code == 'enter' && !inputValue){\r\n                                    setInputError('Try it!')\r\n                                }\r\n                            }}\r\n                            // onKeyPress={this.handleKeyPress.bind(this)}\r\n                            // onFocus={() => !locked && this.setState({ active: true })}\r\n                            // onBlur={() => !locked && this.setState({ active: false })}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                {/* <App\r\n                    inputValue={inputValue}\r\n                    list={list}\r\n                /> */}\r\n                <div>{test}</div>\r\n                {/* <button onClick={()=>dispatch(toTest())}>test2</button> */}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default Algolia"]},"metadata":{},"sourceType":"module"}