{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React-instantsearch\\\\component\\\\Algolia\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport styles from '../../css/App.module.css';\nimport { useDispatch } from 'react-redux';\nimport { toStartSearching, toFinishSearching } from '../../store';\nimport { useSelector } from 'react-redux';\n\nconst App = props => {\n  const dispatch = useDispatch(); // const [ summaryOpen , setSummaryOpen ] = React.useState('');\n\n  const [summaryOpen, setSummaryOpen] = React.useState('');\n  const [hover, setHover] = React.useState('');\n  const isSearching = useSelector(state => state.isSearching);\n  const {\n    list,\n    listLength\n  } = props;\n\n  const handleSummaryOpen = i => {\n    if (summaryOpen === i) {\n      setSummaryOpen('');\n    } else {\n      setSummaryOpen(i);\n    }\n  };\n\n  const handleMouseOver = i => {\n    setHover(i);\n  };\n\n  const handleMouseLeave = () => {\n    setHover('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isSearching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataAmount,\n      children: \"Searching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dataAmount,\n      children: [listLength, \" posts found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), list.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: hover === i ? styles.listBlockOnHover : styles.listBlock,\n      onClick: () => {\n        handleSummaryOpen(i);\n      },\n      onMouseOver: () => {\n        handleMouseOver(i);\n      },\n      onMouseLeave: () => {\n        handleMouseLeave(i);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.title,\n        children: row.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.author,\n        style: {\n          marginTop: '10px'\n        },\n        children: 'By ' + row.author_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), summaryOpen === i && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.summaryBlock,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.summary,\n          children: 'By' + row.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/React-instantsearch/component/Algolia/App.js"],"names":["React","useEffect","algoliasearch","styles","useDispatch","toStartSearching","toFinishSearching","useSelector","App","props","dispatch","summaryOpen","setSummaryOpen","useState","hover","setHover","isSearching","state","list","listLength","handleSummaryOpen","i","handleMouseOver","handleMouseLeave","dataAmount","map","row","listBlockOnHover","listBlock","title","author","marginTop","author_name","summaryBlock","summary"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport styles from '../../css/App.module.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toStartSearching, toFinishSearching } from '../../store'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst App = (props) => {    \r\n\r\n    const dispatch = useDispatch();\r\n    // const [ summaryOpen , setSummaryOpen ] = React.useState('');\r\n    const [ summaryOpen , setSummaryOpen ] = React.useState('');\r\n    const [ hover , setHover ] = React.useState('');\r\n\r\n    const isSearching = useSelector((state) => state.isSearching);\r\n    \r\n    const {\r\n        list,\r\n        listLength\r\n    } = props;\r\n\r\n    const handleSummaryOpen = (i) => {\r\n        if(summaryOpen === i) {\r\n            setSummaryOpen('');\r\n        }else {\r\n            setSummaryOpen(i);\r\n        }\r\n    }\r\n\r\n    const handleMouseOver = (i) => {\r\n        setHover(i);\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setHover('');\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {isSearching?\r\n                <div className={styles.dataAmount}>\r\n                    Searching...\r\n                </div>:\r\n                <div className={styles.dataAmount}>\r\n                    {listLength} posts found\r\n                </div>\r\n            }\r\n\r\n            {list.map((row, i) => \r\n                    \r\n                <div \r\n                    key={i} \r\n                    className={hover===i?styles.listBlockOnHover:styles.listBlock} \r\n                    onClick={()=>{handleSummaryOpen(i)}}\r\n                    onMouseOver={()=>{handleMouseOver(i)}}\r\n                    onMouseLeave={()=>{handleMouseLeave(i)}}\r\n                >\r\n                    <span className={styles.title}>{row.title}</span>\r\n                    <div className={styles.author} style={{marginTop:'10px'}}>{'By ' + row.author_name}</div>\r\n                    {summaryOpen === i &&\r\n                        <div className={styles.summaryBlock}>\r\n                            <span className={styles.summary}>{'By' + row.summary}</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}