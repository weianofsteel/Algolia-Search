{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/wangweian/Desktop/weianwang/component/Public/Header.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { i18n, withTranslation } from '../../i18n';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport styles from '../../css/Public/Header.module.css';\nimport Link from '@material-ui/core/Link';\nimport { useRouter } from 'next/router';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Select } from './Component';\nvar useStyles = makeStyles({\n  title: {\n    fontFamily: 'Bebas Neue ',\n    fontWeight: 400,\n    letterSpacing: '1px',\n    color: 'black',\n    fontSize: '2rem'\n  },\n  link: {\n    fontFamily: 'Roboto',\n    fontWeight: 400,\n    letterSpacing: '1px',\n    marginLeft: '32px',\n    color: '#8F8F8F',\n    fontSize: '1rem',\n    \"&:hover\": {\n      color: 'black'\n    }\n  },\n  linkAnchor: {\n    fontFamily: 'Roboto',\n    fontWeight: 400,\n    letterSpacing: '1px',\n    marginLeft: '32px',\n    color: 'black',\n    fontSize: '1rem'\n  },\n  icon: {\n    fontSize: '1.5rem',\n    color: '#8F8F8F',\n    \"&:hover\": {\n      color: '#1F1F1F'\n    }\n  },\n  formControl: {\n    margin: '0.5rem',\n    width: '10rem'\n  },\n  inputLabel: {\n    fontSize: \"17px\",\n    fontFamily: \"微軟正黑體\",\n    display: \"flex\",\n    flexDirection: \"row-Reverse\"\n  }\n});\n\nvar Header = function Header(_ref) {\n  _s();\n\n  var t = _ref.t,\n      props = _objectWithoutProperties(_ref, [\"t\"]);\n\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _React$useState = React.useState('en'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      language = _React$useState2[0],\n      setLanguage = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setLanguage(event.target.value);\n    i18n.changeLanguage(event.target.value);\n  };\n\n  var handleLanguage = function handleLanguage() {\n    i18n.changeLanguage(i18n.language === 'en' ? 'zhHant' : 'en');\n  };\n\n  var handleDrawerOpen = props.handleDrawerOpen;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        md: 2,\n        style: {\n          marginTop: '0.5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \".\",\n          underline: \"none\",\n          className: classes.title,\n          children: t('title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Hidden, {\n        mdDown: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            marginTop: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            label: /*#__PURE__*/_jsxDEV(TranslateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 30\n            }, _this),\n            name: \"language\",\n            value: language,\n            onChange: handleChange,\n            items: [{\n              value: 'en',\n              label: \"English\"\n            }, {\n              value: 'zhHant',\n              label: \"中文\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"./Work\",\n            underline: \"none\",\n            className: router.pathname == '/Work' ? classes.linkAnchor : classes.link,\n            children: t('work')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"./Writings\",\n            underline: \"none\",\n            className: router.pathname == '/Writings' ? classes.linkAnchor : classes.link,\n            children: t('writings')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"./About\",\n            underline: \"none\",\n            className: router.pathname == '/About' ? classes.linkAnchor : classes.link,\n            children: t('about')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"./Sample\",\n            underline: \"none\",\n            className: router.pathname == '/Sample' ? classes.linkAnchor : classes.link,\n            children: \"Sample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgUp: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          style: {\n            marginTop: '0.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            label: /*#__PURE__*/_jsxDEV(TranslateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 30\n            }, _this),\n            name: \"language\",\n            value: language,\n            onChange: handleChange,\n            items: [{\n              value: 'en',\n              label: \"English\"\n            }, {\n              value: 'zhHant',\n              label: \"中文\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              backgroundColor: 'transparent'\n            },\n            disableRipple: true,\n            onClick: handleDrawerOpen,\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              className: classes.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.ball\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Header, \"x6eNNJUzKRNe56anF9fcXTILFBc=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = Header;\nHeader.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('header')(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/component/Public/Header.js"],"names":["React","i18n","withTranslation","makeStyles","Button","Grid","PropTypes","styles","Link","useRouter","TranslateIcon","MenuIcon","Hidden","IconButton","Select","useStyles","title","fontFamily","fontWeight","letterSpacing","color","fontSize","link","marginLeft","linkAnchor","icon","formControl","margin","width","inputLabel","display","flexDirection","Header","t","props","classes","router","useState","language","setLanguage","handleChange","event","target","value","changeLanguage","handleLanguage","handleDrawerOpen","marginTop","label","pathname","backgroundColor","ball","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { i18n, withTranslation } from '../../i18n';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport styles from '../../css/Public/Header.module.css';\nimport Link from '@material-ui/core/Link';\nimport { useRouter } from 'next/router';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Select} from './Component';\n\nconst useStyles = makeStyles({\n  title: {\n    fontFamily:'Bebas Neue ',\n    fontWeight:400,\n    letterSpacing:'1px',\n    color:'black',\n    fontSize:'2rem',\n  },\n  link: {\n    fontFamily:'Roboto',\n    fontWeight:400,\n    letterSpacing:'1px',\n    marginLeft: '32px',\n    color:'#8F8F8F',\n    fontSize:'1rem',\n    \"&:hover\":{\n        color:'black'\n    }\n  },\n  linkAnchor: {\n    fontFamily:'Roboto',\n    fontWeight:400,\n    letterSpacing:'1px',\n    marginLeft: '32px',\n    color:'black',\n    fontSize:'1rem'\n  },\n  icon: {\n    fontSize:'1.5rem',\n    color:'#8F8F8F',\n    \"&:hover\":{\n        color:'#1F1F1F'\n    }\n  },\n  formControl: {\n    margin: '0.5rem',\n    width:'10rem',\n  },\n  inputLabel: {\n    fontSize:\"17px\",\n    fontFamily:\"微軟正黑體\",\n    display: \"flex\",\n    flexDirection: \"row-Reverse\"\n  }\n})\n\nconst Header = ({t,...props}) => {\n\n    const classes = useStyles();\n\n    const router = useRouter();\n\n    const [ language, setLanguage ] = React.useState('en');\n\n    const handleChange = (event) => {\n      setLanguage(event.target.value);\n      i18n.changeLanguage(event.target.value);\n    };\n\n    const handleLanguage = () => {\n      i18n.changeLanguage(i18n.language === 'en' ? 'zhHant' : 'en')\n    }\n\n    const {\n      handleDrawerOpen\n    } = props;\n\n    return(\n        <React.Fragment>\n             \n            <Grid container>\n\n              <Grid item xs={4} md={2} style={{marginTop:'0.5rem'}}>\n                <Link \n                    href=\".\"\n                    underline='none'\n                    className={classes.title}\n                  >\n                    {t('title')}\n                  </Link>\n              </Grid>\n              <Grid item xs={1} md={2}></Grid>\n              <Grid item xs={1} md={2}></Grid>\n              <Grid item xs={1}></Grid>\n              <Hidden mdDown>\n                <Grid item xs={1} style={{marginTop:'1rem'}}>\n                  {/* <TranslateIcon style={{marginTop:'1.5rem'}}/> */}\n                  <Select\n                      label={<TranslateIcon/>}\n                      name=\"language\"\n                      value={language}\n                      onChange={handleChange}\n                      items={[\n                          {value:'en',label:\"English\"},\n                          {value:'zhHant',label:\"中文\"},\n                      ]}\n                  />\n                </Grid>\n                <Grid item xs={1} style={{marginTop:'1.5rem'}}>\n                  <Link \n                    href=\"./Work\"\n                    underline='none'\n                    className={router.pathname == '/Work'?classes.linkAnchor:classes.link}\n                  >\n                    {t('work')}\n                  </Link>\n                </Grid>\n                <Grid item xs={1} style={{marginTop:'1.5rem'}}>\n                  <Link \n                    href=\"./Writings\"\n                    underline='none'\n                    className={router.pathname == '/Writings'?classes.linkAnchor:classes.link}\n                  >\n                    {t('writings')}\n                  </Link>\n                </Grid>\n                <Grid item xs={1} style={{marginTop:'1.5rem'}}>\n                  <Link \n                    href=\"./About\"\n                    underline='none'\n                    className={router.pathname == '/About'?classes.linkAnchor:classes.link}\n                  >\n                    {t('about')}\n                  </Link>\n                </Grid>\n                <Grid item xs={1} style={{marginTop:'1.5rem'}}>\n                  {/* <Link \n                    href=\"./Resume\"\n                    underline='none'\n                    className={router.pathname == '/Resume'?classes.linkAnchor:classes.link}\n                  >\n                    {t('resume')}\n                  </Link> */}\n                  <Link \n                    href=\"./Sample\"\n                    underline='none'\n                    className={router.pathname == '/Sample'?classes.linkAnchor:classes.link}\n                  >\n                    Sample\n                  </Link>\n                </Grid>\n              </Hidden>\n\n              <Hidden lgUp>\n                <Grid item xs={1}></Grid>\n                {/* <Grid item xs={1}></Grid> */}\n                <Grid item xs={3} style={{marginTop:'0.5rem'}}>\n                  <Select\n                      label={<TranslateIcon/>}\n                      name=\"language\"\n                      value={language}\n                      onChange={handleChange}\n                      items={[\n                          {value:'en',label:\"English\"},\n                          {value:'zhHant',label:\"中文\"},\n                      ]}\n                  />\n                {/* <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel \n                      id=\"demo-simple-select-label\" \n                      shrink={true}\n                    >\n                      <TranslateIcon/>\n                      </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      open={open}\n                      onClose={handleClose}\n                      onOpen={handleOpen}\n                      value={language}\n                      onChange={handleChange}\n                      displayEmpty={true}\n                    >\n                        <MenuItem value={'en'}>English</MenuItem>\n                        <MenuItem value={'zhHant'}>中文</MenuItem>\n                    </Select>\n                  </FormControl> */}\n                  {/* <IconButton\n                    type='button'\n                    style={{backgroundColor: 'transparent'}}\n                    disableRipple={true}\n                    onClick={handleLanguage}\n                  >\n                    <TranslateIcon className={classes.icon}/>\n                  </IconButton> */}\n                </Grid>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={1}>\n                  <IconButton\n                    style={{backgroundColor: 'transparent'}}\n                    disableRipple={true}\n                    onClick={handleDrawerOpen}\n                  >\n                    <MenuIcon className={classes.icon}/>\n                  </IconButton>\n                </Grid>\n              </Hidden>\n\n            </Grid>\n\n            <p className={styles.ball}></p>\n             \n        </React.Fragment>\n    )\n}\n\nHeader.propTypes = {\n  t: PropTypes.func.isRequired,\n}\n\n\nexport default withTranslation('header')(Header)"]},"metadata":{},"sourceType":"module"}