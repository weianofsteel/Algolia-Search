{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wangweian/Desktop/weianwang/component/Home/component/LearnByDoing.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { i18n, withTranslation } from '../../../i18n';\nimport PropTypes from 'prop-types';\nimport gif4 from '../../../public/image/gif/gif4.gif';\nimport gif5 from '../../../public/image/gif/gif5.gif';\nimport gif6 from '../../../public/image/gif/gif6.gif';\nimport gif7 from '../../../public/image/gif/gif7.gif';\nimport gif8 from '../../../public/image/gif/gif8.gif';\nimport gif10 from '../../../public/image/gif/gif10.gif';\nconst useStyles = makeStyles({\n  title: {\n    fontFamily: 'Roboto Slab',\n    fontSize: '2rem'\n  },\n  imgBlock: {\n    width: '100%' // padding:'1rem'\n\n  },\n  imgHover: {\n    backgroundColor: 'black',\n    zIndex: 999\n  },\n  imgBox: {\n    backgroundImage: 'url(' + {\n      gif4\n    } + ')'\n  }\n});\n\nconst LearnByDoing = (_ref) => {\n  let {\n    t\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"t\"]);\n\n  const classes = useStyles();\n  const [onHover, setOnHover] = React.useState(false);\n\n  const handleOnHover = () => {\n    setOnHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setOnHover(false);\n  };\n\n  const {\n    mode\n  } = props;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: t('title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: handleOnHover,\n          onMouseLeave: handleMouseLeave,\n          style: {\n            height: '100%'\n          },\n          className: classes.imgBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\nLearnByDoing.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('learnByDoing')(LearnByDoing);","map":{"version":3,"sources":["/Users/wangweian/Desktop/weianwang/component/Home/component/LearnByDoing.js"],"names":["React","Link","Grid","makeStyles","i18n","withTranslation","PropTypes","gif4","gif5","gif6","gif7","gif8","gif10","useStyles","title","fontFamily","fontSize","imgBlock","width","imgHover","backgroundColor","zIndex","imgBox","backgroundImage","LearnByDoing","t","props","classes","onHover","setOnHover","useState","handleOnHover","handleMouseLeave","mode","height","propTypes","func","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,eAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC;AACzBW,EAAAA,KAAK,EAAC;AACFC,IAAAA,UAAU,EAAC,aADT;AAEFC,IAAAA,QAAQ,EAAC;AAFP,GADmB;AAKzBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,KAAK,EAAC,MADD,CAEL;;AAFK,GALgB;AASzBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,eAAe,EAAC,OADX;AAELC,IAAAA,MAAM,EAAC;AAFF,GATgB;AAazBC,EAAAA,MAAM,EAAC;AACHC,IAAAA,eAAe,EAAC,SAAQ;AAAChB,MAAAA;AAAD,KAAR,GAAgB;AAD7B;AAbkB,CAAD,CAA5B;;AAkBA,MAAMiB,YAAY,GAAG,UAAkB;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AAAA,MAAXC,KAAW;;AACnC,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwB7B,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,QAAMG,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFD;;AAIA,QAAM;AACFI,IAAAA;AADE,MAEFP,KAFJ;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAG,MAAA,SAAS,EAAEC,OAAO,CAACb,KAAtB;AAAA,gBAA8BW,CAAC,CAAC,OAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,+BACI;AACI,UAAA,YAAY,EAAEM,aADlB;AAEI,UAAA,YAAY,EAAEC,gBAFlB;AAGI,UAAA,KAAK,EAAE;AAACE,YAAAA,MAAM,EAAC;AAAR,WAHX;AAII,UAAA,SAAS,EAAEP,OAAO,CAACL;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CAxDD;;AA0DAE,YAAY,CAACW,SAAb,GAAyB;AACrBV,EAAAA,CAAC,EAAEnB,SAAS,CAAC8B,IAAV,CAAeC;AADG,CAAzB;AAIA,eAAehC,eAAe,CAAC,cAAD,CAAf,CAAgCmB,YAAhC,CAAf","sourcesContent":["import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { i18n, withTranslation } from '../../../i18n'\nimport PropTypes from 'prop-types'\nimport gif4 from '../../../public/image/gif/gif4.gif'\nimport gif5 from '../../../public/image/gif/gif5.gif'\nimport gif6 from '../../../public/image/gif/gif6.gif'\nimport gif7 from '../../../public/image/gif/gif7.gif'\nimport gif8 from '../../../public/image/gif/gif8.gif'\nimport gif10 from '../../../public/image/gif/gif10.gif'\n\nconst useStyles = makeStyles({\n    title:{\n        fontFamily:'Roboto Slab',\n        fontSize:'2rem'\n    },\n    imgBlock:{\n        width:'100%',\n        // padding:'1rem'\n    },\n    imgHover:{\n        backgroundColor:'black',\n        zIndex:999\n    },\n    imgBox:{\n        backgroundImage:'url('+ {gif4} +')' \n    }\n})\n\nconst LearnByDoing = ({t,...props}) => {\n    const classes = useStyles();\n\n    const [onHover, setOnHover] = React.useState(false);\n\n    const handleOnHover = () => {\n        setOnHover(true);\n    }\n\n    const handleMouseLeave = () => {\n        setOnHover(false);\n    }\n\n    const {\n        mode\n    } = props;\n\n    return(\n        <React.Fragment>\n            <p className={classes.title}>{t('title')}</p>\n            <Grid container spacing={3}>\n                <Grid item xs={6} md={4}>\n                    <div \n                        onMouseEnter={handleOnHover}\n                        onMouseLeave={handleMouseLeave}\n                        style={{height:'100%'}}\n                        className={classes.imgBox}\n                    >\n                        {/* {onHover == false &&\n                            <img src={gif4} className={classes.imgBlock}/>\n                        }\n                        {onHover == true &&\n                            <div style={{backgroundColor:'black',height:'100%'}}>\n                                <p style={{color:'white'}}>Carousel</p>\n                            </div>\n                        } */}\n                    </div>\n                </Grid>\n                {/* <Grid item xs={6} md={4}>\n                    <img src={gif5} className={classes.imgBlock}/>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <img src={gif6} className={classes.imgBlock}/>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <img src={gif7} className={classes.imgBlock}/>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <img src={gif8} className={classes.imgBlock}/>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <img src={gif10} className={classes.imgBlock}/>\n                </Grid> */}\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nLearnByDoing.propTypes = {\n    t: PropTypes.func.isRequired,\n}\n\nexport default withTranslation('learnByDoing')(LearnByDoing)"]},"metadata":{},"sourceType":"module"}